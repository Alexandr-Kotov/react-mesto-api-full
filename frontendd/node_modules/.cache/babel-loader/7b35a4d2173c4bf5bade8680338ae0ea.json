{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\\\u043A\\u043E\\u0442\\\\OneDrive\\\\\\u0420\\u0430\\u0431\\u043E\\u0447\\u0438\\u0439 \\u0441\\u0442\\u043E\\u043B\\\\praktikum\\\\mesto-react\\\\src\\\\components\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport Header from './Header.js';\nimport Main from './Main.js';\nimport Footer from './Footer.js';\nimport { useState } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { ImagePopup } from './ImagePopup.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getCardSever()]).then(_ref => {\n      let [user, cards] = _ref;\n      setCurrentUser(user);\n      setCards(cards);\n    }).catch(error => console.log(error));\n  }, []);\n\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n\n  const handleCardClick = card => setSelectedCard(card);\n\n  const closeAllPopups = e => {\n    if (e.type === \"keydown\" || e.target.classList.contains(\"popup_opened\") || e.target.classList.contains(\"popup__close\")) {\n      setIsAddPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setSelectedCard(null);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Main, {\n      onAddPlace: handleAddPlaceClick,\n      onEditAvatar: handleEditAvatarClick,\n      onEditProfile: handleEditProfileClick,\n      onCardClick: handleCardClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ImagePopup, {\n      onClose: closeAllPopups,\n      card: selectedCard\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(App, \"6fa2iiHFLf1TaIogpP7mIcData8=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/кот/OneDrive/Рабочий стол/praktikum/mesto-react/src/components/App.js"],"names":["Header","Main","Footer","useState","PopupWithForm","ImagePopup","App","isEditProfilePopupOpen","setIsEditProfilePopupOpen","isAddPlacePopupOpen","setIsAddPlacePopupOpen","isEditAvatarPopupOpen","setIsEditAvatarPopupOpen","selectedCard","setSelectedCard","currentUser","setCurrentUser","useEffect","Promise","all","api","getProfile","getCardSever","then","user","cards","setCards","catch","error","console","log","handleEditProfileClick","handleAddPlaceClick","handleEditAvatarClick","handleCardClick","card","closeAllPopups","e","type","target","classList","contains"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,aAAnB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,aAAP,MAA0B,oBAA1B;AACA,SAASC,UAAT,QAA2B,iBAA3B;;;;AAEA,SAASC,GAAT,GAAe;AAAA;;AAEb,QAAM,CAACC,sBAAD,EAAyBC,yBAAzB,IAAsDL,QAAQ,CAAC,KAAD,CAApE;AACA,QAAM,CAACM,mBAAD,EAAsBC,sBAAtB,IAAgDP,QAAQ,CAAC,KAAD,CAA9D;AACA,QAAM,CAACQ,qBAAD,EAAwBC,wBAAxB,IAAoDT,QAAQ,CAAC,KAAD,CAAlE;AACA,QAAM,CAACU,YAAD,EAAeC,eAAf,IAAkCX,QAAQ,CAAC,IAAD,CAAhD;AACA,QAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCb,QAAQ,CAAC,IAAD,CAA9C;AAEAc,EAAAA,SAAS,CAAC,MAAM;AACdC,IAAAA,OAAO,CAACC,GAAR,CAAY,CAACC,GAAG,CAACC,UAAJ,EAAD,EAAmBD,GAAG,CAACE,YAAJ,EAAnB,CAAZ,EACGC,IADH,CACQ,QAAmB;AAAA,UAAlB,CAACC,IAAD,EAAOC,KAAP,CAAkB;AACvBT,MAAAA,cAAc,CAACQ,IAAD,CAAd;AACAE,MAAAA,QAAQ,CAACD,KAAD,CAAR;AACD,KAJH,EAKGE,KALH,CAKUC,KAAD,IAAWC,OAAO,CAACC,GAAR,CAAYF,KAAZ,CALpB;AAMD,GAPQ,EAON,EAPM,CAAT;;AASA,QAAMG,sBAAsB,GAAG,MAAMvB,yBAAyB,CAAC,IAAD,CAA9D;;AACA,QAAMwB,mBAAmB,GAAG,MAAMtB,sBAAsB,CAAC,IAAD,CAAxD;;AACA,QAAMuB,qBAAqB,GAAG,MAAMrB,wBAAwB,CAAC,IAAD,CAA5D;;AACA,QAAMsB,eAAe,GAAIC,IAAD,IAAUrB,eAAe,CAACqB,IAAD,CAAjD;;AAEA,QAAMC,cAAc,GAAIC,CAAD,IAAO;AAC5B,QACEA,CAAC,CAACC,IAAF,KAAW,SAAX,IACAD,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,cAA5B,CADA,IAEAJ,CAAC,CAACE,MAAF,CAASC,SAAT,CAAmBC,QAAnB,CAA4B,cAA5B,CAHF,EAIE;AACA/B,MAAAA,sBAAsB,CAAC,KAAD,CAAtB;AACAE,MAAAA,wBAAwB,CAAC,KAAD,CAAxB;AACAJ,MAAAA,yBAAyB,CAAC,KAAD,CAAzB;AACAM,MAAAA,eAAe,CAAC,IAAD,CAAf;AACD;AACF,GAXD;;AAaA,sBACE;AAAA,4BACQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YADR,eAEQ,QAAC,IAAD;AACE,MAAA,UAAU,EAAEkB,mBADd;AAEE,MAAA,YAAY,EAAEC,qBAFhB;AAGE,MAAA,aAAa,EAAEF,sBAHjB;AAIE,MAAA,WAAW,EAAEG;AAJf;AAAA;AAAA;AAAA;AAAA,YAFR,eAQQ,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,YARR,eAYQ,QAAC,UAAD;AAAY,MAAA,OAAO,EAAEE,cAArB;AAAqC,MAAA,IAAI,EAAEvB;AAA3C;AAAA;AAAA;AAAA;AAAA,YAZR;AAAA,kBADF;AAgBD;;GAnDQP,G;;KAAAA,G;AAqDT,eAAeA,GAAf","sourcesContent":["import Header from './Header.js'\nimport Main from './Main.js'\nimport Footer from './Footer.js'\nimport { useState } from 'react';\nimport PopupWithForm from './PopupWithForm.js';\nimport { ImagePopup } from './ImagePopup.js';\n\nfunction App() {\n  \n  const [isEditProfilePopupOpen, setIsEditProfilePopupOpen] = useState(false);\n  const [isAddPlacePopupOpen, setIsAddPlacePopupOpen] = useState(false);\n  const [isEditAvatarPopupOpen, setIsEditAvatarPopupOpen] = useState(false);\n  const [selectedCard, setSelectedCard] = useState(null);\n  const [currentUser, setCurrentUser] = useState(null);\n\n  useEffect(() => {\n    Promise.all([api.getProfile(), api.getCardSever()])\n      .then(([user, cards]) => {\n        setCurrentUser(user);\n        setCards(cards);\n      })\n      .catch((error) => console.log(error));\n  }, []);\n\n  const handleEditProfileClick = () => setIsEditProfilePopupOpen(true);\n  const handleAddPlaceClick = () => setIsAddPlacePopupOpen(true);\n  const handleEditAvatarClick = () => setIsEditAvatarPopupOpen(true);\n  const handleCardClick = (card) => setSelectedCard(card);\n\n  const closeAllPopups = (e) => {\n    if (\n      e.type === \"keydown\" ||\n      e.target.classList.contains(\"popup_opened\") ||\n      e.target.classList.contains(\"popup__close\")\n    ) {\n      setIsAddPlacePopupOpen(false);\n      setIsEditAvatarPopupOpen(false);\n      setIsEditProfilePopupOpen(false);\n      setSelectedCard(null);\n    }\n  };\n\n  return (\n    <>\n            <Header />\n            <Main\n              onAddPlace={handleAddPlaceClick}\n              onEditAvatar={handleEditAvatarClick}\n              onEditProfile={handleEditProfileClick}\n              onCardClick={handleCardClick}\n            />\n            <Footer />\n\n            \n\n            <ImagePopup onClose={closeAllPopups} card={selectedCard} />\n    </>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}