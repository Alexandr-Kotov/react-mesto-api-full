{"ast":null,"code":"class Api {\n  constructor(options) {\n    this._baseUrl = options.baseUrl;\n    this._headers = options.headers;\n\n    this._resHandler = res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  } // Returns array of cards\n\n\n  getCards() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  } //Takes name & link. Returns card\n\n\n  postCard(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(card)\n    }).then(res => this._resHandler(res));\n  } // Returns OK msg\n\n\n  deleteCard(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  } // Returns user\n\n\n  getMe() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  } // Takes name and about. Returns user\n\n\n  patchMe(me) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(me)\n    }).then(res => this._resHandler(res));\n  } // Returns user\n\n\n  patchAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(res => this._resHandler(res));\n  } // Returns card\n\n\n  putLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"PUT\",\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  } // Returns card\n\n\n  deleteLike(cardId) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: \"DELETE\",\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-35\",\n  headers: {\n    authorization: \"1ce0766d-1d99-41e8-b2c1-6a564053af66\",\n    \"Content-Type\": \"application/json\"\n  }\n});","map":{"version":3,"sources":["C:/Users/кот/OneDrive/Рабочий стол/praktikum/mesto-react/src/utils/Api.js"],"names":["Api","constructor","options","_baseUrl","baseUrl","_headers","headers","_resHandler","res","ok","json","Promise","reject","status","getCards","fetch","then","postCard","card","method","body","JSON","stringify","deleteCard","cardId","getMe","patchMe","me","patchAvatar","avatarLink","avatar","putLike","deleteLike","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n    constructor(options) {\r\n      this._baseUrl = options.baseUrl;\r\n      this._headers = options.headers;\r\n      this._resHandler = (res) => (res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\r\n    }\r\n  \r\n    // Returns array of cards\r\n    getCards() {\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n        headers: this._headers,\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    //Takes name & link. Returns card\r\n    postCard(card) {\r\n      return fetch(`${this._baseUrl}/cards`, {\r\n        method: \"POST\",\r\n        headers: this._headers,\r\n        body: JSON.stringify(card),\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Returns OK msg\r\n    deleteCard(cardId) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Returns user\r\n    getMe() {\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n        headers: this._headers,\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Takes name and about. Returns user\r\n    patchMe(me) {\r\n      return fetch(`${this._baseUrl}/users/me`, {\r\n        method: \"PATCH\",\r\n        headers: this._headers,\r\n        body: JSON.stringify(me),\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Returns user\r\n    patchAvatar(avatarLink) {\r\n      return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n        method: \"PATCH\",\r\n        headers: this._headers,\r\n        body: JSON.stringify({ avatar: avatarLink }),\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Returns card\r\n    putLike(cardId) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"PUT\",\r\n        headers: this._headers,\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  \r\n    // Returns card\r\n    deleteLike(cardId) {\r\n      return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n        method: \"DELETE\",\r\n        headers: this._headers,\r\n      }).then((res) => this._resHandler(res));\r\n    }\r\n  }\r\n  \r\n  export const api = new Api({\r\n    baseUrl: \"https://mesto.nomoreparties.co/v1/cohort-35\",\r\n    headers: {\r\n      authorization: \"1ce0766d-1d99-41e8-b2c1-6a564053af66\",\r\n      \"Content-Type\": \"application/json\",\r\n    },\r\n  });"]},"metadata":{},"sourceType":"module"}