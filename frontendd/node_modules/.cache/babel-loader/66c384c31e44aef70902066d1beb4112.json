{"ast":null,"code":"class Api {\n  constructor(_ref) {\n    let {\n      baseUrl,\n      headers\n    } = _ref;\n    this._baseUrl = baseUrl;\n    this._headers = headers;\n\n    this._resHandler = res => res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`);\n  }\n\n  getProfile() {\n    return fetch(`${this._baseUrl}/users/me`, {\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n  patchProfile(name, about) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        name,\n        about\n      })\n    }).then(res => this._resHandler(res));\n  }\n\n  patchProfile(me) {\n    return fetch(`${this._baseUrl}/users/me`, {\n      method: \"PATCH\",\n      headers: this._headers,\n      body: JSON.stringify(me)\n    }).then(res => this._resHandler(res));\n  }\n\n  getCardSever() {\n    return fetch(`${this._baseUrl}/cards`, {\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n  postCardSever(card) {\n    return fetch(`${this._baseUrl}/cards`, {\n      method: \"POST\",\n      headers: this._headers,\n      body: JSON.stringify(card)\n    }).then(res => this._resHandler(res));\n  }\n\n  deleteCard(id) {\n    return fetch(`${this._baseUrl}/cards/${id}`, {\n      method: 'DELETE',\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n  toggleLike(cardId, hasMyLike) {\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\n      method: `${hasMyLike ? \"DELETE\" : \"PUT\"}`,\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n  addLike(id) {\n    return fetch(`${this._baseUrl}/cards/${id}/likes`, {\n      method: 'PUT',\n      headers: this._headers\n    }).then(res => this._resHandler(res));\n  }\n\n  patchAvatar(avatarLink) {\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\n      method: 'PATCH',\n      headers: this._headers,\n      body: JSON.stringify({\n        avatar: avatarLink\n      })\n    }).then(res => this._resHandler(res));\n  }\n\n}\n\nexport const api = new Api({\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-37',\n  headers: {\n    authorization: '4681c571-88f6-4ca4-b1b2-2741f41c35d8',\n    'Content-Type': 'application/json'\n  }\n});","map":{"version":3,"sources":["C:/Users/кот/OneDrive/Рабочий стол/praktikum/mesto-react/src/utils/Api.js"],"names":["Api","constructor","baseUrl","headers","_baseUrl","_headers","_resHandler","res","ok","json","Promise","reject","status","getProfile","fetch","then","patchProfile","name","about","method","body","JSON","stringify","me","getCardSever","postCardSever","card","deleteCard","id","toggleLike","cardId","hasMyLike","addLike","patchAvatar","avatarLink","avatar","api","authorization"],"mappings":"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","sourcesContent":["class Api {\r\n  constructor({baseUrl, headers}) {\r\n    this._baseUrl = baseUrl;\r\n    this._headers = headers;\r\n    this._resHandler = (res) => (res.ok ? res.json() : Promise.reject(`Ошибка: ${res.status}`));\r\n  }\r\n\r\n  getProfile(){\r\n    return fetch(`${this._baseUrl}/users/me`,{\r\n      headers: this._headers\r\n    })  \r\n    .then((res) => this._resHandler(res))\r\n  }\r\n\r\n  patchProfile(name, about){\r\n    return fetch(`${this._baseUrl}/users/me`,{\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({\r\n        name,\r\n        about\r\n    })\r\n    })\r\n\r\n    .then((res) => this._resHandler(res))\r\n  }\r\n\r\n\r\n  patchProfile(me) {\r\n    return fetch(`${this._baseUrl}/users/me`, {\r\n      method: \"PATCH\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(me),\r\n    }).then((res) => this._resHandler(res));\r\n  }\r\n\r\n  getCardSever(){\r\n    return fetch(`${this._baseUrl}/cards`,{\r\n      headers: this._headers\r\n    })\r\n    .then((res) => this._resHandler(res))\r\n  }\r\n\r\n  postCardSever(card) {\r\n    return fetch(`${this._baseUrl}/cards`, {\r\n      method: \"POST\",\r\n      headers: this._headers,\r\n      body: JSON.stringify(card),\r\n    }).then((res) => this._resHandler(res));\r\n  }\r\n\r\n  deleteCard(id){\r\n    return fetch(`${this._baseUrl}/cards/${id}`,{\r\n      method: 'DELETE',\r\n      headers: this._headers,\r\n    })\r\n    .then((res) => this._resHandler(res))\r\n  }\r\n\r\n\r\n  toggleLike(cardId, hasMyLike) {\r\n    return fetch(`${this._baseUrl}/cards/${cardId}/likes`, {\r\n      method: `${hasMyLike ? \"DELETE\" : \"PUT\"}`,\r\n      headers: this._headers,\r\n    }).then((res) => this._resHandler(res));\r\n  }\r\n\r\n\r\n  addLike(id){\r\n    return fetch(`${this._baseUrl}/cards/${id}/likes`,{\r\n      method: 'PUT',\r\n      headers: this._headers,\r\n    })\r\n    .then((res) => this._resHandler(res))\r\n  }\r\n\r\n\r\n  patchAvatar(avatarLink) {\r\n    return fetch(`${this._baseUrl}/users/me/avatar`, {\r\n      method: 'PATCH',\r\n      headers: this._headers,\r\n      body: JSON.stringify({ \r\n        avatar: avatarLink\r\n      })\r\n    })\r\n    .then((res) => this._resHandler(res))\r\n  }\r\n}\r\n\r\nexport const api = new Api({\r\n  baseUrl: 'https://mesto.nomoreparties.co/v1/cohort-37',\r\n  headers: {\r\n    authorization: '4681c571-88f6-4ca4-b1b2-2741f41c35d8',\r\n    'Content-Type': 'application/json'\r\n  }\r\n});"]},"metadata":{},"sourceType":"module"}